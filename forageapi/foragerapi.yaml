openapi: 3.0.1
info:
  title: Forager-Compass API
  description: >-
    This server, and the related REST API's, are used to faciliate the retention of discovered items while foraging for food.



    In particular, this server provides a small set of REST API's that are used by the Forage-Compass application itself, but can also be used by third party applications.

  contact:
    email: seung2@pdx.edu, camilo3@pdx.edu, mwignall@pdx.edu
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 1.0.0

servers:
  - url: "https://foragecompass.herokuapp.com"
  - url: "http://localhost:3001"
tags:
  - name: categories
    description: Information pertaining to the the types of items tracked by Forager-Compass
  - name: locations
    description: Information stored for discovered locations of Forage-Compass items
  - name: support
    description: Information that corresponds to requested Features, Bugs, or Data Fixes
paths:
  /categories:
    get:
      tags:
        - categories
      summary: Get all Forager-Compass supported varieties
      description: Returns all varietiel information, as a JSON object containing Categories and Varities within each
      operationId: getCategories
      responses:
        200:
          description: Successfull operation
          content: {}
  /locations:
    get:
      tags:
        - locations
      summary: Get all known Forager-Compass locations reported by users
      description: >-
        Returns all location information, as a JSON object containing location name, latitude, longitude and type of item (variety) discovered

        For valid responses, varietal should match one of the varieties supported
        See: `/categories` for more information
      operationId: getLocations
      parameters:
        - name: variety
          in: query
          description: Variety of locations to filter to, leave blank for all known
          required: false
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/locations"
        "406":
          description: Invalid variety specified
          content: {}
    post:
      tags:
        - locations
      summary: Adds a new location to the list of known locations
      description: >-
        Adds the location specified in the body
      operationId: addLocation
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bob's secret berry bush
                latitude:
                  type: number
                  format: float
                  example: 145.535838
                longitude:
                  type: number
                  format: float
                  example: -122.727242
                variety:
                  type: string
                  format: string
                  example: Marionberry
      responses:
        "200":
          description: Location Added
        "406":
          description: Invalid location information provided
    put:
      tags:
        - locations
      summary: Udates an existing location
      description: >-
        Updates the location specified by the `name` parameter, replacing the contents with the new values specified in the body
      operationId: updateLocation
      requestBody:
        required: true
        description: >-
          Adds the location specified in the body

        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bob's secret berry bush
                latitude:
                  type: number
                  format: float
                  example: 145.535838
                longitude:
                  type: number
                  format: float
                  example: -122.727242
                variety:
                  type: string
                  format: string
                  example: Apple
      responses:
        "200":
          description: Location Updated
        "406":
          description: Invalid location information provided
    delete:
      tags:
        - locations
      summary: Deletes an existing location
      description: >-
        Deletes the location specified by the `name` parameter
      operationId: deleteLocation
      parameters:
        - name: name
          in: query
          description: Name of an existing location that will be deleted
          required: true
          schema:
            type: string
            format: string
            example: Bob's super secret berry bush
      responses:
        "200":
          description: Location Deleted
        "404":
          description: Location was not found
  /support:
    get:
      tags:
        - support
      summary: Get all known Forager-Compass support related items
      description: >-
        Returns all support related items (Features, Bugs, Data), as a JSON object containing category and message
      operationId: getSupportItems
      parameters:
        - name: category
          in: query
          description: Category of support items to filter on.  Leave blank for no filter.
          required: false
          schema:
            $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/supportItems"
        "406":
          description: Invalid category specified
          content: {}
    post:
      tags:
        - support
      summary: Adds a new support item
      description: >-
        Adds a new support item to the list of tracked issues
      operationId: addSupport
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                category:
                  type: string
                  enum: [Feature, Bug, Data]
                message:
                  type: string
                  format: string
                  example: Please include the feature that I havn't thought of yet
      responses:
        "200":
          description: Support item added
        "406":
          description: |
            JSON payload was unacceptable:

            Reponse text could be one of the following hints as to why:

            *Category specified must be one of: Feature,Bug,Data*

            *Message is not present*
  /support/{supportID}:
    delete:
      tags:
        - support
      summary: Deletes an existing support item
      description: >-
        Deletes the request item number
      operationId: deleteSupport
      parameters:
        - name: supportID
          in: path
          description: Support number (_id) corresponding to the item to be deleted
          required: true
          schema:
            type: integer
            example: 8675309
      responses:
        "200":
          description: Support item deleted
        "404":
          description: Support item not found

components:
  schemas:
    locations:
      required:
        - latitude
        - longitude
        - variety
        - name
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          uniqueItems: true
          example: 605a6421d763780935d80eb1
          readonly: true
        name:
          type: string
          example: Bob's secret berry bush
        latitude:
          type: number
          format: float
          example: 145.535838
        longitude:
          type: number
          format: float
          example: -122.727242
        variety:
          type: string
          format: string
          example: Marionberry
    Category:
      type: string
      enum: [Feature, Bug, Data]
    supportItems:
      required:
        - category
        - message
      type: object
      properties:
        _id:
          type: string
          format: Int32
          uniqueItems: true
          example: 1234
          readonly: true
        category:
          type: string
          example: Feature
        message:
          type: string
          format: string
          example: Please add feature for determining winning lottery numbers

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
